Terminals which are not used

   MENOR_Q
   MENOR_I
   IGUAL
   DIFERENTE
   MAIOR_Q
   MAIOR_I
   MAIS
   MENOS
   VEZES
   DIVIDIR
   ERRO


Grammar

    0 $accept: prog $end

    1 prog: PROGRAMA ID PVIRG decls ccomp

    2 decls: /* empty */
    3      | VARIAVEIS listdecls

    4 listdecls: decltipo d

    5 d: /* empty */
    6  | listdecls

    7 decltipo: listid DPONTOS tipo PVIRG

    8 listid: ID e

    9 e: /* empty */
   10  | VIRG listid

   11 tipo: INTEIRO
   12     | REAL
   13     | LOGICO
   14     | CARACTER

   15 ccomp: ABRECH listacomandos FECHACH

   16 listacomandos: comandos g

   17 g: /* empty */
   18  | listacomandos

   19 comandos: if
   20         | while
   21         | read
   22         | write
   23         | atrib

   24 if: SE ABREPAR expr FECHAPAR ccomp h

   25 h: /* empty */
   26  | SENAO ccomp

   27 while: ENQUANTO ABREPAR expr FECHAPAR ccomp

   28 read: LEIA ABREPAR listid FECHAPAR PVIRG

   29 atrib: ID ATRIB expr PVIRG

   30 write: ESCREVA ABREPAR listw FECHAPAR PVIRG

   31 listw: elemw l

   32 l: /* empty */
   33  | VIRG listw

   34 elemw: expr
   35      | CADEIA

   36 expr: simples p

   37 p: /* empty */
   38  | OPREL simples

   39 simples: termo r

   40 r: /* empty */
   41  | OPAD simples

   42 termo: fat s

   43 s: /* empty */
   44  | OPMUL termo

   45 fat: ID
   46    | CTE
   47    | ABREPAR expr FECHAPAR
   48    | VERDADEIRO
   49    | FALSO
   50    | OPNEG fat


Terminals, with rules where they appear

$end (0) 0
error (256)
MENOR_Q (258)
MENOR_I (259)
IGUAL (260)
DIFERENTE (261)
MAIOR_Q (262)
MAIOR_I (263)
SE (264) 24
SENAO (265) 26
ID (266) 1 8 29 45
CTE (267) 46
MAIS (268)
MENOS (269)
VEZES (270)
DIVIDIR (271)
ATRIB (272) 29
PVIRG (273) 1 7 28 29 30
DPONTOS (274) 7
VIRG (275) 10 33
ABRECH (276) 15
ABREPAR (277) 24 27 28 30 47
FECHACH (278) 15
FECHAPAR (279) 24 27 28 30 47
PROGRAMA (280) 1
VARIAVEIS (281) 3
INTEIRO (282) 11
REAL (283) 12
LOGICO (284) 13
CARACTER (285) 14
ESCREVA (286) 30
LEIA (287) 28
FALSO (288) 49
VERDADEIRO (289) 48
ENQUANTO (290) 27
OPREL (291) 38
OPAD (292) 41
OPMUL (293) 44
OPNEG (294) 50
CADEIA (295) 35
ERRO (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
prog (43)
    on left: 1, on right: 0
decls (44)
    on left: 2 3, on right: 1
listdecls (45)
    on left: 4, on right: 3 6
d (46)
    on left: 5 6, on right: 4
decltipo (47)
    on left: 7, on right: 4
listid (48)
    on left: 8, on right: 7 10 28
e (49)
    on left: 9 10, on right: 8
tipo (50)
    on left: 11 12 13 14, on right: 7
ccomp (51)
    on left: 15, on right: 1 24 26 27
listacomandos (52)
    on left: 16, on right: 15 18
g (53)
    on left: 17 18, on right: 16
comandos (54)
    on left: 19 20 21 22 23, on right: 16
if (55)
    on left: 24, on right: 19
h (56)
    on left: 25 26, on right: 24
while (57)
    on left: 27, on right: 20
read (58)
    on left: 28, on right: 21
atrib (59)
    on left: 29, on right: 23
write (60)
    on left: 30, on right: 22
listw (61)
    on left: 31, on right: 30 33
l (62)
    on left: 32 33, on right: 31
elemw (63)
    on left: 34 35, on right: 31
expr (64)
    on left: 36, on right: 24 27 29 34 47
p (65)
    on left: 37 38, on right: 36
simples (66)
    on left: 39, on right: 36 38 41
r (67)
    on left: 40 41, on right: 39
termo (68)
    on left: 42, on right: 39 44
s (69)
    on left: 43 44, on right: 42
fat (70)
    on left: 45 46 47 48 49 50, on right: 42 50


state 0

    0 $accept: . prog $end

    PROGRAMA  shift, and go to state 1

    prog  go to state 2


state 1

    1 prog: PROGRAMA . ID PVIRG decls ccomp

    ID  shift, and go to state 3


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 4


state 3

    1 prog: PROGRAMA ID . PVIRG decls ccomp

    PVIRG  shift, and go to state 5


state 4

    0 $accept: prog $end .

    $default  accept


state 5

    1 prog: PROGRAMA ID PVIRG . decls ccomp

    VARIAVEIS  shift, and go to state 6

    $default  reduce using rule 2 (decls)

    decls  go to state 7


state 6

    3 decls: VARIAVEIS . listdecls

    ID  shift, and go to state 8

    listdecls  go to state 9
    decltipo   go to state 10
    listid     go to state 11


state 7

    1 prog: PROGRAMA ID PVIRG decls . ccomp

    ABRECH  shift, and go to state 12

    ccomp  go to state 13


state 8

    8 listid: ID . e

    VIRG  shift, and go to state 14

    $default  reduce using rule 9 (e)

    e  go to state 15


state 9

    3 decls: VARIAVEIS listdecls .

    $default  reduce using rule 3 (decls)


state 10

    4 listdecls: decltipo . d

    ID  shift, and go to state 8

    $default  reduce using rule 5 (d)

    listdecls  go to state 16
    d          go to state 17
    decltipo   go to state 10
    listid     go to state 11


state 11

    7 decltipo: listid . DPONTOS tipo PVIRG

    DPONTOS  shift, and go to state 18


state 12

   15 ccomp: ABRECH . listacomandos FECHACH

    SE        shift, and go to state 19
    ID        shift, and go to state 20
    ESCREVA   shift, and go to state 21
    LEIA      shift, and go to state 22
    ENQUANTO  shift, and go to state 23

    listacomandos  go to state 24
    comandos       go to state 25
    if             go to state 26
    while          go to state 27
    read           go to state 28
    atrib          go to state 29
    write          go to state 30


state 13

    1 prog: PROGRAMA ID PVIRG decls ccomp .

    $default  reduce using rule 1 (prog)


state 14

   10 e: VIRG . listid

    ID  shift, and go to state 8

    listid  go to state 31


state 15

    8 listid: ID e .

    $default  reduce using rule 8 (listid)


state 16

    6 d: listdecls .

    $default  reduce using rule 6 (d)


state 17

    4 listdecls: decltipo d .

    $default  reduce using rule 4 (listdecls)


state 18

    7 decltipo: listid DPONTOS . tipo PVIRG

    INTEIRO   shift, and go to state 32
    REAL      shift, and go to state 33
    LOGICO    shift, and go to state 34
    CARACTER  shift, and go to state 35

    tipo  go to state 36


state 19

   24 if: SE . ABREPAR expr FECHAPAR ccomp h

    ABREPAR  shift, and go to state 37


state 20

   29 atrib: ID . ATRIB expr PVIRG

    ATRIB  shift, and go to state 38


state 21

   30 write: ESCREVA . ABREPAR listw FECHAPAR PVIRG

    ABREPAR  shift, and go to state 39


state 22

   28 read: LEIA . ABREPAR listid FECHAPAR PVIRG

    ABREPAR  shift, and go to state 40


state 23

   27 while: ENQUANTO . ABREPAR expr FECHAPAR ccomp

    ABREPAR  shift, and go to state 41


state 24

   15 ccomp: ABRECH listacomandos . FECHACH

    FECHACH  shift, and go to state 42


state 25

   16 listacomandos: comandos . g

    SE        shift, and go to state 19
    ID        shift, and go to state 20
    ESCREVA   shift, and go to state 21
    LEIA      shift, and go to state 22
    ENQUANTO  shift, and go to state 23

    $default  reduce using rule 17 (g)

    listacomandos  go to state 43
    g              go to state 44
    comandos       go to state 25
    if             go to state 26
    while          go to state 27
    read           go to state 28
    atrib          go to state 29
    write          go to state 30


state 26

   19 comandos: if .

    $default  reduce using rule 19 (comandos)


state 27

   20 comandos: while .

    $default  reduce using rule 20 (comandos)


state 28

   21 comandos: read .

    $default  reduce using rule 21 (comandos)


state 29

   23 comandos: atrib .

    $default  reduce using rule 23 (comandos)


state 30

   22 comandos: write .

    $default  reduce using rule 22 (comandos)


state 31

   10 e: VIRG listid .

    $default  reduce using rule 10 (e)


state 32

   11 tipo: INTEIRO .

    $default  reduce using rule 11 (tipo)


state 33

   12 tipo: REAL .

    $default  reduce using rule 12 (tipo)


state 34

   13 tipo: LOGICO .

    $default  reduce using rule 13 (tipo)


state 35

   14 tipo: CARACTER .

    $default  reduce using rule 14 (tipo)


state 36

    7 decltipo: listid DPONTOS tipo . PVIRG

    PVIRG  shift, and go to state 45


state 37

   24 if: SE ABREPAR . expr FECHAPAR ccomp h

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    expr     go to state 52
    simples  go to state 53
    termo    go to state 54
    fat      go to state 55


state 38

   29 atrib: ID ATRIB . expr PVIRG

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    expr     go to state 56
    simples  go to state 53
    termo    go to state 54
    fat      go to state 55


state 39

   30 write: ESCREVA ABREPAR . listw FECHAPAR PVIRG

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51
    CADEIA      shift, and go to state 57

    listw    go to state 58
    elemw    go to state 59
    expr     go to state 60
    simples  go to state 53
    termo    go to state 54
    fat      go to state 55


state 40

   28 read: LEIA ABREPAR . listid FECHAPAR PVIRG

    ID  shift, and go to state 8

    listid  go to state 61


state 41

   27 while: ENQUANTO ABREPAR . expr FECHAPAR ccomp

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    expr     go to state 62
    simples  go to state 53
    termo    go to state 54
    fat      go to state 55


state 42

   15 ccomp: ABRECH listacomandos FECHACH .

    $default  reduce using rule 15 (ccomp)


state 43

   18 g: listacomandos .

    $default  reduce using rule 18 (g)


state 44

   16 listacomandos: comandos g .

    $default  reduce using rule 16 (listacomandos)


state 45

    7 decltipo: listid DPONTOS tipo PVIRG .

    $default  reduce using rule 7 (decltipo)


state 46

   45 fat: ID .

    $default  reduce using rule 45 (fat)


state 47

   46 fat: CTE .

    $default  reduce using rule 46 (fat)


state 48

   47 fat: ABREPAR . expr FECHAPAR

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    expr     go to state 63
    simples  go to state 53
    termo    go to state 54
    fat      go to state 55


state 49

   49 fat: FALSO .

    $default  reduce using rule 49 (fat)


state 50

   48 fat: VERDADEIRO .

    $default  reduce using rule 48 (fat)


state 51

   50 fat: OPNEG . fat

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    fat  go to state 64


state 52

   24 if: SE ABREPAR expr . FECHAPAR ccomp h

    FECHAPAR  shift, and go to state 65


state 53

   36 expr: simples . p

    OPREL  shift, and go to state 66

    $default  reduce using rule 37 (p)

    p  go to state 67


state 54

   39 simples: termo . r

    OPAD  shift, and go to state 68

    $default  reduce using rule 40 (r)

    r  go to state 69


state 55

   42 termo: fat . s

    OPMUL  shift, and go to state 70

    $default  reduce using rule 43 (s)

    s  go to state 71


state 56

   29 atrib: ID ATRIB expr . PVIRG

    PVIRG  shift, and go to state 72


state 57

   35 elemw: CADEIA .

    $default  reduce using rule 35 (elemw)


state 58

   30 write: ESCREVA ABREPAR listw . FECHAPAR PVIRG

    FECHAPAR  shift, and go to state 73


state 59

   31 listw: elemw . l

    VIRG  shift, and go to state 74

    $default  reduce using rule 32 (l)

    l  go to state 75


state 60

   34 elemw: expr .

    $default  reduce using rule 34 (elemw)


state 61

   28 read: LEIA ABREPAR listid . FECHAPAR PVIRG

    FECHAPAR  shift, and go to state 76


state 62

   27 while: ENQUANTO ABREPAR expr . FECHAPAR ccomp

    FECHAPAR  shift, and go to state 77


state 63

   47 fat: ABREPAR expr . FECHAPAR

    FECHAPAR  shift, and go to state 78


state 64

   50 fat: OPNEG fat .

    $default  reduce using rule 50 (fat)


state 65

   24 if: SE ABREPAR expr FECHAPAR . ccomp h

    ABRECH  shift, and go to state 12

    ccomp  go to state 79


state 66

   38 p: OPREL . simples

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    simples  go to state 80
    termo    go to state 54
    fat      go to state 55


state 67

   36 expr: simples p .

    $default  reduce using rule 36 (expr)


state 68

   41 r: OPAD . simples

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    simples  go to state 81
    termo    go to state 54
    fat      go to state 55


state 69

   39 simples: termo r .

    $default  reduce using rule 39 (simples)


state 70

   44 s: OPMUL . termo

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51

    termo  go to state 82
    fat    go to state 55


state 71

   42 termo: fat s .

    $default  reduce using rule 42 (termo)


state 72

   29 atrib: ID ATRIB expr PVIRG .

    $default  reduce using rule 29 (atrib)


state 73

   30 write: ESCREVA ABREPAR listw FECHAPAR . PVIRG

    PVIRG  shift, and go to state 83


state 74

   33 l: VIRG . listw

    ID          shift, and go to state 46
    CTE         shift, and go to state 47
    ABREPAR     shift, and go to state 48
    FALSO       shift, and go to state 49
    VERDADEIRO  shift, and go to state 50
    OPNEG       shift, and go to state 51
    CADEIA      shift, and go to state 57

    listw    go to state 84
    elemw    go to state 59
    expr     go to state 60
    simples  go to state 53
    termo    go to state 54
    fat      go to state 55


state 75

   31 listw: elemw l .

    $default  reduce using rule 31 (listw)


state 76

   28 read: LEIA ABREPAR listid FECHAPAR . PVIRG

    PVIRG  shift, and go to state 85


state 77

   27 while: ENQUANTO ABREPAR expr FECHAPAR . ccomp

    ABRECH  shift, and go to state 12

    ccomp  go to state 86


state 78

   47 fat: ABREPAR expr FECHAPAR .

    $default  reduce using rule 47 (fat)


state 79

   24 if: SE ABREPAR expr FECHAPAR ccomp . h

    SENAO  shift, and go to state 87

    $default  reduce using rule 25 (h)

    h  go to state 88


state 80

   38 p: OPREL simples .

    $default  reduce using rule 38 (p)


state 81

   41 r: OPAD simples .

    $default  reduce using rule 41 (r)


state 82

   44 s: OPMUL termo .

    $default  reduce using rule 44 (s)


state 83

   30 write: ESCREVA ABREPAR listw FECHAPAR PVIRG .

    $default  reduce using rule 30 (write)


state 84

   33 l: VIRG listw .

    $default  reduce using rule 33 (l)


state 85

   28 read: LEIA ABREPAR listid FECHAPAR PVIRG .

    $default  reduce using rule 28 (read)


state 86

   27 while: ENQUANTO ABREPAR expr FECHAPAR ccomp .

    $default  reduce using rule 27 (while)


state 87

   26 h: SENAO . ccomp

    ABRECH  shift, and go to state 12

    ccomp  go to state 89


state 88

   24 if: SE ABREPAR expr FECHAPAR ccomp h .

    $default  reduce using rule 24 (if)


state 89

   26 h: SENAO ccomp .

    $default  reduce using rule 26 (h)
